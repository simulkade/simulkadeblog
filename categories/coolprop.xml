<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>SIMULKADE (Posts about CoolProp)</title><link>http://simulkade.com/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://simulkade.com/categories/coolprop.xml"></atom:link><language>en</language><lastBuildDate>Tue, 22 May 2018 13:24:36 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Physical properties in Julia: CoolProp</title><link>http://simulkade.com/posts/Physical%20properties%20in%20Julia%3A%20CoolProp.html</link><dc:creator>AA Eftekhari</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently, I was analyzing my core-flooding experimental data in a Julia notebook, when I realize that I don't have access to a few Matlab functions that I have written (or found elsewhere), which I use regularly for the calculation of physical properties of pure components. For instance, viscosity of water (I know that you know it is 0.001 Pa.s) or density of CO2 or nitrogen at different temperatures and pressures. I know that &lt;a href="http://www.thermo.ruhr-uni-bochum.de/en/prof-w-wagner.html"&gt;Professor Wagner&lt;/a&gt; and his group have developed a few highly-accurate equations of state for industrial applications and I knew that there is a software called &lt;a href="http://ascend4.org/FPROPS"&gt;FPROPS&lt;/a&gt; which is used in &lt;a href="http://ascend4.org/Main_Page"&gt;Ascend IV&lt;/a&gt; package. Searching the name in google showed me a fantastic package called &lt;a href="http://simulkade.com/posts/www.coolprop.org/"&gt;CoolProp&lt;/a&gt; which is being developed mostly in &lt;a href="http://www.labothap.ulg.ac.be/cmsms/"&gt;thermodynamics laboratory&lt;/a&gt; in &lt;a href="http://simulkade.com/posts/www.ulg.ac.be/"&gt;Universite de Liege&lt;/a&gt;. The code is written in C++ but it supports many languages and environments including Matlab and Python. The Python part was interesting to me because I can call it using &lt;a href="https://github.com/stevengj/PyCall.jl"&gt;PyCall&lt;/a&gt; package in Julia. First I installed the &lt;code&gt;CoolProp&lt;/code&gt; package using the instructions &lt;a href="http://www.coolprop.org/HowGetIt.html"&gt;here&lt;/a&gt;. You can do it in Ubuntu 14.04 by running the following code in terminal:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install g++
sudo apt-get install cython
sudo apt-get install python-pip
sudo apt-get install python-dev
sudo pip install CoolProp
&lt;/pre&gt;


&lt;p&gt;&lt;a href="http://simulkade.com/posts/Physical%20properties%20in%20Julia%3A%20CoolProp.html"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>CoolProp</category><category>Julia</category><guid>http://simulkade.com/posts/Physical%20properties%20in%20Julia%3A%20CoolProp.html</guid><pubDate>Fri, 24 Oct 2014 23:37:54 GMT</pubDate></item></channel></rss>